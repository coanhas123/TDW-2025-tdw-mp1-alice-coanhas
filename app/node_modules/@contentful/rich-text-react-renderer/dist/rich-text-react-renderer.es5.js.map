{"version":3,"file":"rich-text-react-renderer.es5.js","sources":["../src/util/appendKeyToValidElement.ts","../src/util/nodeListToReactComponents.tsx","../src/index.tsx"],"sourcesContent":["import { cloneElement, isValidElement, ReactNode } from 'react';\n\nexport function appendKeyToValidElement(element: ReactNode, key: number): ReactNode {\n  if (isValidElement(element) && element.key === null) {\n    return cloneElement(element, { key });\n  }\n  return element;\n}\n","import React, { ReactNode } from 'react';\n\nimport { helpers, Mark } from '@contentful/rich-text-types';\n\nimport { CommonNode, Options } from '..';\n\nimport { appendKeyToValidElement } from './appendKeyToValidElement';\n\nexport function nodeListToReactComponents(nodes: CommonNode[], options: Options): ReactNode {\n  return nodes.map((node: CommonNode, index: number): ReactNode => {\n    return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n  });\n}\n\nexport function nodeToReactComponent(node: CommonNode, options: Options): ReactNode {\n  const { renderNode, renderMark, renderText, preserveWhitespace } = options;\n\n  if (helpers.isText(node)) {\n    let nodeValue: ReactNode = renderText ? renderText(node.value) : node.value;\n\n    // Preserving whitespace is only supported with the default transformations.\n    if (preserveWhitespace && !renderText) {\n      // Preserve multiple spaces.\n      nodeValue = (nodeValue as string).replace(/ {2,}/g, (match) => '\\u00A0'.repeat(match.length));\n\n      // Preserve line breaks.\n      const lines = (nodeValue as string).split('\\n');\n      const jsxLines: (string | React.JSX.Element)[] = [];\n\n      lines.forEach((line, index) => {\n        jsxLines.push(line);\n        if (index !== lines.length - 1) {\n          jsxLines.push(<br />);\n        }\n      });\n      nodeValue = jsxLines;\n    }\n\n    return node.marks.reduce((value: ReactNode, mark: Mark): ReactNode => {\n      if (!renderMark[mark.type]) {\n        return value;\n      }\n      return renderMark[mark.type](value);\n    }, nodeValue);\n  } else {\n    const children: ReactNode = nodeListToReactComponents(node.content, options);\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      return <>{children}</>;\n    }\n    return renderNode[node.nodeType](node, children);\n  }\n}\n","import React, { ReactNode } from 'react';\n\nimport {\n  Block,\n  BLOCKS,\n  Document,\n  Inline,\n  INLINES,\n  MARKS,\n  Text,\n  helpers,\n} from '@contentful/rich-text-types';\n\nimport { nodeToReactComponent } from './util/nodeListToReactComponents';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.DOCUMENT]: (node, children) => children,\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, children) => <div>{children}</div>,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, children) => <div>{children}</div>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n  [BLOCKS.TABLE]: (node, children) => (\n    <table>\n      <tbody>{children}</tbody>\n    </table>\n  ),\n  [BLOCKS.TABLE_ROW]: (node, children) => <tr>{children}</tr>,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <th>{children}</th>,\n  [BLOCKS.TABLE_CELL]: (node, children) => <td>{children}</td>,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node, _children) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, children) => <a href={node.data.uri}>{children}</a>,\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => <b>{text}</b>,\n  [MARKS.ITALIC]: (text) => <i>{text}</i>,\n  [MARKS.UNDERLINE]: (text) => <u>{text}</u>,\n  [MARKS.CODE]: (text) => <code>{text}</code>,\n  [MARKS.SUPERSCRIPT]: (text) => <sup>{text}</sup>,\n  [MARKS.SUBSCRIPT]: (text) => <sub>{text}</sub>,\n  [MARKS.STRIKETHROUGH]: (text) => <s>{text}</s>,\n};\n\nfunction defaultInline(type: string, node: Inline): ReactNode {\n  return (\n    <span key={node.data.target.sys.id}>\n      type: {node.nodeType} id: {node.data.target.sys.id}\n    </span>\n  );\n}\n\nfunction defaultInlineResource(type: string, node: Inline) {\n  return (\n    <span key={node.data.target.sys.urn}>\n      type: {node.nodeType} urn: {node.data.target.sys.urn}\n    </span>\n  );\n}\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface NodeRenderer {\n  (node: Block | Inline, children: ReactNode): ReactNode;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: ReactNode) => ReactNode;\n}\n\nexport interface RenderText {\n  (text: string): ReactNode;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n  /**\n   * Strip empty trailing paragraph from the document\n   */\n  stripEmptyTrailingParagraph?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: Document,\n  options: Options = {},\n): ReactNode {\n  if (!richTextDocument) {\n    return null;\n  }\n\n  // Strip empty trailing paragraph if enabled\n  let processedDocument = richTextDocument;\n  if (options.stripEmptyTrailingParagraph) {\n    processedDocument = helpers.stripEmptyTrailingParagraphFromDocument(richTextDocument);\n  }\n\n  return nodeToReactComponent(processedDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    renderText: options.renderText,\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n"],"names":["appendKeyToValidElement","element","key","isValidElement","cloneElement","nodeListToReactComponents","nodes","options","map","node","index","nodeToReactComponent","renderNode","renderMark","renderText","preserveWhitespace","helpers","isText","nodeValue","value","replace","match","repeat","length","lines","split","jsxLines","forEach","line","push","br","marks","reduce","mark","type","children","content","nodeType","defaultNodeRenderers","BLOCKS","DOCUMENT","PARAGRAPH","p","HEADING_1","h1","HEADING_2","h2","HEADING_3","h3","HEADING_4","h4","HEADING_5","h5","HEADING_6","h6","EMBEDDED_ENTRY","div","EMBEDDED_RESOURCE","UL_LIST","ul","OL_LIST","ol","LIST_ITEM","li","QUOTE","blockquote","HR","hr","TABLE","table","tbody","TABLE_ROW","tr","TABLE_HEADER_CELL","th","TABLE_CELL","td","INLINES","ASSET_HYPERLINK","defaultInline","ENTRY_HYPERLINK","RESOURCE_HYPERLINK","defaultInlineResource","_children","HYPERLINK","a","href","data","uri","defaultMarkRenderers","MARKS","BOLD","text","b","ITALIC","i","UNDERLINE","u","CODE","code","SUPERSCRIPT","sup","SUBSCRIPT","sub","STRIKETHROUGH","s","span","target","sys","id","urn","documentToReactComponents","richTextDocument","processedDocument","stripEmptyTrailingParagraph","stripEmptyTrailingParagraphFromDocument"],"mappings":"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"}