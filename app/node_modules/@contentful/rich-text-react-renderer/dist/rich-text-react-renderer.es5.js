'use strict';

var React = require('react');
var richTextTypes = require('@contentful/rich-text-types');

function appendKeyToValidElement(element, key) {
    if (React.isValidElement(element) && element.key === null) {
        return React.cloneElement(element, {
            key
        });
    }
    return element;
}

function nodeListToReactComponents(nodes, options) {
    return nodes.map((node, index)=>{
        return appendKeyToValidElement(nodeToReactComponent(node, options), index);
    });
}
function nodeToReactComponent(node, options) {
    const { renderNode, renderMark, renderText, preserveWhitespace } = options;
    if (richTextTypes.helpers.isText(node)) {
        let nodeValue = renderText ? renderText(node.value) : node.value;
        if (preserveWhitespace && !renderText) {
            nodeValue = nodeValue.replace(/ {2,}/g, (match)=>'\u00A0'.repeat(match.length));
            const lines = nodeValue.split('\n');
            const jsxLines = [];
            lines.forEach((line, index)=>{
                jsxLines.push(line);
                if (index !== lines.length - 1) {
                    jsxLines.push(React.createElement("br", null));
                }
            });
            nodeValue = jsxLines;
        }
        return node.marks.reduce((value, mark)=>{
            if (!renderMark[mark.type]) {
                return value;
            }
            return renderMark[mark.type](value);
        }, nodeValue);
    } else {
        const children = nodeListToReactComponents(node.content, options);
        if (!node.nodeType || !renderNode[node.nodeType]) {
            return React.createElement(React.Fragment, null, children);
        }
        return renderNode[node.nodeType](node, children);
    }
}

const defaultNodeRenderers = {
    [richTextTypes.BLOCKS.DOCUMENT]: (node, children)=>children,
    [richTextTypes.BLOCKS.PARAGRAPH]: (node, children)=>React.createElement("p", null, children),
    [richTextTypes.BLOCKS.HEADING_1]: (node, children)=>React.createElement("h1", null, children),
    [richTextTypes.BLOCKS.HEADING_2]: (node, children)=>React.createElement("h2", null, children),
    [richTextTypes.BLOCKS.HEADING_3]: (node, children)=>React.createElement("h3", null, children),
    [richTextTypes.BLOCKS.HEADING_4]: (node, children)=>React.createElement("h4", null, children),
    [richTextTypes.BLOCKS.HEADING_5]: (node, children)=>React.createElement("h5", null, children),
    [richTextTypes.BLOCKS.HEADING_6]: (node, children)=>React.createElement("h6", null, children),
    [richTextTypes.BLOCKS.EMBEDDED_ENTRY]: (node, children)=>React.createElement("div", null, children),
    [richTextTypes.BLOCKS.EMBEDDED_RESOURCE]: (node, children)=>React.createElement("div", null, children),
    [richTextTypes.BLOCKS.UL_LIST]: (node, children)=>React.createElement("ul", null, children),
    [richTextTypes.BLOCKS.OL_LIST]: (node, children)=>React.createElement("ol", null, children),
    [richTextTypes.BLOCKS.LIST_ITEM]: (node, children)=>React.createElement("li", null, children),
    [richTextTypes.BLOCKS.QUOTE]: (node, children)=>React.createElement("blockquote", null, children),
    [richTextTypes.BLOCKS.HR]: ()=>React.createElement("hr", null),
    [richTextTypes.BLOCKS.TABLE]: (node, children)=>React.createElement("table", null, React.createElement("tbody", null, children)),
    [richTextTypes.BLOCKS.TABLE_ROW]: (node, children)=>React.createElement("tr", null, children),
    [richTextTypes.BLOCKS.TABLE_HEADER_CELL]: (node, children)=>React.createElement("th", null, children),
    [richTextTypes.BLOCKS.TABLE_CELL]: (node, children)=>React.createElement("td", null, children),
    [richTextTypes.INLINES.ASSET_HYPERLINK]: (node)=>defaultInline(richTextTypes.INLINES.ASSET_HYPERLINK, node),
    [richTextTypes.INLINES.ENTRY_HYPERLINK]: (node)=>defaultInline(richTextTypes.INLINES.ENTRY_HYPERLINK, node),
    [richTextTypes.INLINES.RESOURCE_HYPERLINK]: (node)=>defaultInlineResource(richTextTypes.INLINES.RESOURCE_HYPERLINK, node),
    [richTextTypes.INLINES.EMBEDDED_ENTRY]: (node)=>defaultInline(richTextTypes.INLINES.EMBEDDED_ENTRY, node),
    [richTextTypes.INLINES.EMBEDDED_RESOURCE]: (node, _children)=>defaultInlineResource(richTextTypes.INLINES.EMBEDDED_RESOURCE, node),
    [richTextTypes.INLINES.HYPERLINK]: (node, children)=>React.createElement("a", {
            href: node.data.uri
        }, children)
};
const defaultMarkRenderers = {
    [richTextTypes.MARKS.BOLD]: (text)=>React.createElement("b", null, text),
    [richTextTypes.MARKS.ITALIC]: (text)=>React.createElement("i", null, text),
    [richTextTypes.MARKS.UNDERLINE]: (text)=>React.createElement("u", null, text),
    [richTextTypes.MARKS.CODE]: (text)=>React.createElement("code", null, text),
    [richTextTypes.MARKS.SUPERSCRIPT]: (text)=>React.createElement("sup", null, text),
    [richTextTypes.MARKS.SUBSCRIPT]: (text)=>React.createElement("sub", null, text),
    [richTextTypes.MARKS.STRIKETHROUGH]: (text)=>React.createElement("s", null, text)
};
function defaultInline(type, node) {
    return React.createElement("span", {
        key: node.data.target.sys.id
    }, "type: ", node.nodeType, " id: ", node.data.target.sys.id);
}
function defaultInlineResource(type, node) {
    return React.createElement("span", {
        key: node.data.target.sys.urn
    }, "type: ", node.nodeType, " urn: ", node.data.target.sys.urn);
}
function documentToReactComponents(richTextDocument, options = {}) {
    if (!richTextDocument) {
        return null;
    }
    let processedDocument = richTextDocument;
    if (options.stripEmptyTrailingParagraph) {
        processedDocument = richTextTypes.helpers.stripEmptyTrailingParagraphFromDocument(richTextDocument);
    }
    return nodeToReactComponent(processedDocument, {
        renderNode: {
            ...defaultNodeRenderers,
            ...options.renderNode
        },
        renderMark: {
            ...defaultMarkRenderers,
            ...options.renderMark
        },
        renderText: options.renderText,
        preserveWhitespace: options.preserveWhitespace
    });
}

exports.documentToReactComponents = documentToReactComponents;
//# sourceMappingURL=rich-text-react-renderer.es5.js.map
